{"version":3,"sources":["MovieCard.tsx","Movies.tsx","services/CinemaWorldMovieService.ts","services/FilmWorldMovieService.ts","MovieAppBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","card","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","width","rating","paddingLeft","MovieCard","children","movie","classes","React","useState","expanded","setExpanded","subheader","director","year","Card","className","CardHeader","Avatar","aria-label","rated","title","Rating","name","size","readOnly","value","CardContent","Typography","variant","color","component","actors","runtime","language","country","price","genre","writer","CardMedia","image","poster","Divider","CardActions","disableSpacing","IconButton","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","plot","root","flexGrow","paper","padding","spacing","margin","Movies","movies","Paper","square","Grid","container","map","key","id","CinemaWorldMovieService","FilmWorldMovieService","TabPanel","props","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","palette","background","SimpleTabs","setValue","cinemaWorldMovies","GetMovies","filmWorldMovies","AppBar","position","Tabs","onChange","event","newValue","Tab","label","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6450f649.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport IMovieProps from './MovieProps';\nimport Rating from '@material-ui/lab/Rating';\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport RoomIcon from '@material-ui/icons/Room';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\nimport TheatersIcon from '@material-ui/icons/Theaters';\nimport CreateIcon from '@material-ui/icons/Create';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n      width: \"60px\",\n      height: \"60px\"\n    },\n    rating: {\n        paddingLeft: '5%'\n    }\n  }),\n);\n\nconst MovieCard: React.FC<{movie: IMovieProps}> = ({children, movie}) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const subheader = `${movie.director}, ${movie.year}`;\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"rated\" className={classes.avatar}>\n            {movie.rated}\n          </Avatar>\n        }\n        \n        title={movie.title}\n        subheader={subheader}\n      />\n      <Rating name=\"rating\" size=\"small\" className={classes.rating} readOnly value={movie.rating} />\n      <CardContent>\n      <RecentActorsIcon/>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {movie.actors}\n        </Typography>\n        \n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            <ScheduleIcon/>{movie.runtime}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            <LanguageIcon/>{movie.language}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            <RoomIcon/>{movie.country}\n        </Typography>\n\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            <LocalAtmIcon/>{movie.price}\n        </Typography>\n        \n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            <TheatersIcon/>{movie.genre}\n        </Typography>\n\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            <CreateIcon/>{movie.writer}\n        </Typography>\n        \n        \n      </CardContent>\n      <CardMedia\n        className={classes.media}\n        image={movie.poster}\n        title={movie.title}\n      />\n      <Divider/>\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n        <Typography variant=\"h5\">Plot</Typography>\n        <Divider/>\n        <Typography paragraph>{movie.plot}</Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n\nexport default MovieCard;","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport IMovieProps, { IMovies } from './IMovieProps';\nimport MovieCard from './MovieCard';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      margin: 'auto',\n    }\n  }),\n);\n\nconst Movies: React.FC<{movies: Array<IMovieProps>}> = ({children, movies}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper square className={classes.paper}>\n        <Grid container spacing={3}>\n            {movies.map(movie => <MovieCard movie={movie} key={movie.id}/>)}\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n\nexport default Movies;","import IMovieProps from '../IMovieProps';\n\nexport default class CinemaWorldMovieService {\n    GetMovies() : Array<IMovieProps>\n    {\n        return [\n        {\n            id: \"cw0076759\",\n            title: \"Star Wars: Episode IV - A New Hope\",\n            rated: \"PG\",\n            poster: \"http://ia.media-imdb.com/images/M/MV5BMjE2MzQwMTgxN15BMl5BanBnXkFtZTcwMDQzNjk2OQ@@._V1_SX300.jpg\",\n            plot: \"Luke Skywalker joins forces with a Jedi Knight, a cocky pilot, a wookiee and two droids to save the galaxy from the Empire's world-destroying battle-station, while also attempting to rescue Princess Leia from the evil Darth Vader.\",\n            \"year\": \"1980\",\n            \"released\": \"20 Jun 1980\",\n            \"runtime\": \"124 min\",\n            \"genre\": \"Action, Adventure, Fantasy\",\n            \"director\": \"Irvin Kershner\",\n            \"writer\": \"Leigh Brackett (screenplay), Lawrence Kasdan (screenplay), George Lucas (story by)\",\n            \"actors\": \"Mark Hamill, Harrison Ford, Carrie Fisher, Billy Dee Williams\",\n            \"language\": \"English\",\n            \"country\": \"USA\",\n            \"awards\": \"Won 1 Oscar. Another 19 wins & 18 nominations.\",\n            \"metascore\": 80,\n            \"rating\": 4,\n            \"votes\": \"842,451\",\n            \"type\": \"movie\",\n            \"price\": \"13.5\"\n        },\n        {\n            \"title\": \"Star Wars: Episode V - The Empire Strikes Back\",\n            \"year\": \"1980\",\n            \"rated\": \"PG\",\n            \"released\": \"20 Jun 1980\",\n            \"runtime\": \"124 min\",\n            \"genre\": \"Action, Adventure, Fantasy\",\n            \"director\": \"Irvin Kershner\",\n            \"writer\": \"Leigh Brackett (screenplay), Lawrence Kasdan (screenplay), George Lucas (story by)\",\n            \"actors\": \"Mark Hamill, Harrison Ford, Carrie Fisher, Billy Dee Williams\",\n            \"plot\": \"After the Rebel base on the icy planet Hoth is taken over by the Empire, Han, Leia, Chewbacca, and C-3PO flee across the galaxy from the Empire. Luke travels to the forgotten planet of Dagobah to receive training from the Jedi master Yoda, while Vader endlessly pursues him.\",\n            \"language\": \"English\",\n            \"country\": \"USA\",\n            \"awards\": \"Won 1 Oscar. Another 19 wins & 18 nominations.\",\n            \"poster\": \"http://ia.media-imdb.com/images/M/MV5BMjE2MzQwMTgxN15BMl5BanBnXkFtZTcwMDQzNjk2OQ@@._V1_SX300.jpg\",\n            \"metascore\": 80,\n            \"rating\": 3,\n            \"votes\": \"842,451\",\n            \"id\": \"cw0080684\",\n            \"type\": \"movie\",\n            \"price\": \"13.5\"\n        }\n        ];\n    } \n}\n\n","import IMovieProps from '../IMovieProps';\n\nexport default class FilmWorldMovieService {\n    GetMovies() : Array<IMovieProps>\n    {\n        return [\n        {\n            \"title\": \"Star Wars: Episode V - The Empire Strikes Back\",\n            \"year\": \"1980\",\n            \"rated\": \"PG\",\n            \"released\": \"20 Jun 1980\",\n            \"runtime\": \"124 min\",\n            \"genre\": \"Action, Adventure, Fantasy\",\n            \"director\": \"Irvin Kershner\",\n            \"writer\": \"Leigh Brackett (screenplay), Lawrence Kasdan (screenplay), George Lucas (story by)\",\n            \"actors\": \"Mark Hamill, Harrison Ford, Carrie Fisher, Billy Dee Williams\",\n            \"plot\": \"After the Rebel base on the icy planet Hoth is taken over by the Empire, Han, Leia, Chewbacca, and C-3PO flee across the galaxy from the Empire. Luke travels to the forgotten planet of Dagobah to receive training from the Jedi master Yoda, while Vader endlessly pursues him.\",\n            \"language\": \"English\",\n            \"country\": \"USA\",\n            \"awards\": \"Won 1 Oscar. Another 19 wins & 18 nominations.\",\n            \"poster\": \"http://ia.media-imdb.com/images/M/MV5BMjE2MzQwMTgxN15BMl5BanBnXkFtZTcwMDQzNjk2OQ@@._V1_SX300.jpg\",\n            \"metascore\": 80,\n            \"rating\": 3,\n            \"votes\": \"842,451\",\n            \"id\": \"cw0080684\",\n            \"type\": \"movie\",\n            \"price\": \"13.5\"\n        },\n        {\n            \"title\": \"Star Wars: Episode III - Revenge of the Sith\",\n            \"year\": \"2005\",\n            \"rated\": \"PG-13\",\n            \"released\": \"19 May 2005\",\n            \"runtime\": \"140 min\",\n            \"genre\": \"Action, Adventure, Fantasy\",\n            \"director\": \"George Lucas\",\n            \"writer\": \"George Lucas\",\n            \"actors\": \"Ewan McGregor, Natalie Portman, Hayden Christensen, Ian McDiarmid\",\n            \"plot\": \"During the near end of the clone wars, Darth Sidious has revealed himself and is ready to execute the last part of his plan to rule the Galaxy. Sidious is ready for his new apprentice, Lord...\",\n            \"language\": \"English\",\n            \"country\": \"USA\",\n            \"poster\": \"http://ia.media-imdb.com/images/M/MV5BNTc4MTc3NTQ5OF5BMl5BanBnXkFtZTfwOTg0NjI4NA@@._V1_SX300.jpg\",\n            \"metascore\": 68,\n            \"rating\": 3.3,\n            \"votes\": \"522,705\",\n            \"id\": \"fw0121766\",\n            \"type\": \"movie\",\n            \"price\": \"129.9\"\n            }\n        ];\n    } \n}\n\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Movies from './Movies';\nimport CinemaWorldMovieService from './services/CinemaWorldMovieService';\nimport FilmWorldMovieService from './services/FilmWorldMovieService';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `movie-tab-${index}`,\n    'aria-controls': `movie-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function SimpleTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const cinemaWorldMovies = new CinemaWorldMovieService().GetMovies();\n  const filmWorldMovies = new FilmWorldMovieService().GetMovies();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"cinema world and film world tabs\">\n          <Tab label=\"Cinema World\" {...a11yProps(0)} />\n          <Tab label=\"Film World\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Movies key={1} movies={cinemaWorldMovies}/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Movies key={2} movies={filmWorldMovies}/>\n      </TabPanel>\n    </div>\n  );\n}","import React from 'react';\nimport './App.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport 'typeface-roboto';\nimport MovieAppBar from './MovieAppBar';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n});\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <MovieAppBar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}